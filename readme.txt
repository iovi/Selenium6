Список контактов http://samples.gwtproject.org/samples/Showcase/Showcase.html#!CwCellList 
Класс для тестирования CellListTest. Выполнялись проверки: 
1. WebElementsExistTest
Наличие на странице
- формы ввода данных (First Name, Last Name, Category, Birthday, Address)
- кнопок Create Contact и Update Contact
- списка контактов с как минимум одним элементом
Проверки выполняются по наличию html-тэгов на странице:
First Name  - "(//input[@class='gwt-TextBox'])[1]"
Last Name - "(//input[@class='gwt-TextBox'])[2]"
Category - "//select[@class='gwt-ListBox']"
Birthday - "//input[@class='gwt-DateBox']"
Address - "//textarea"
Create Contact - "//button[text() = 'Create Contact']"
Update Contact - "//button[text() = 'Update Contact']"
список контактов с как минимум одним элементом - "//div[@class='GNHGC04CGB']/div/div[1]"

2. ContactInfoDisplayTest
Проверка корректного отображения контакта при нажатии - соответствие данных (имени и адреса) у элементов списка с выводимыми в Contact Info.
Выполняется нажатие на первый элемент в списке, его данные сравниваются с выведенными в Contact Info.
Затем, до тех пор, пока элементы в списке не заканчиваются, нажимается клавиша "Вниз" и данные следующего элемента из списка сравниваются с Contact Info.

3. AddContactTest
Добавление контакта, проверка соответствия данных у последнего контакта в списке ранее введенным.
Выполняются действия:
1) заполнение формы Contact Info,
2) нажатие на "Create Contact", 
3) прокрутка списка до последнего элемента, 
4) сравнение имени и адреса в списке с введенными в п.1
5) нажатие на последний элемент списка, сравнение отображающихся данных в Contact Info с введенными в п.1

4. UpdateContactTest
Обновление контакта 
1) последовательный ввод новых данных для 5 элементов списка и нажатие на Update Contact,
2) последовательный выбор 5 первых элементов, проверка соответствия отображаемых данных в Contact Info ранее введенным



Таблица контактов http://samples.gwtproject.org/samples/Showcase/Showcase.html#!CwCellTable
Класс для тестирования CellListTable. Выполнялись проверки: 
1. WebElementsExist
Наличие на странице:
- таблицы контактов с заголовками столбцов First Name, Last Name, Category, Address
- первой строки с данными в этой таблице
- кнопок First page, Last page, Next page, Previous page
- подписи под таблицей вида "1-15 of 250", показывающей номера первого и последнего контактов на страцие и общего количества контактов
Проверки выполняются по наличию html-тэгов на странице:
First Name в заголовке - "//table[@class='GNHGC04CIE GNHGC04CKJ']/thead/tr/th[text() = 'First Name']"
Last Name в заголовке - "//table[@class='GNHGC04CIE GNHGC04CKJ']/thead/tr/th[text() = 'Last Name']"
Category в заголовке - "//table[@class='GNHGC04CIE GNHGC04CKJ']/thead/tr/th[text() = 'Category']"
Address в заголовке - "//table[@class='GNHGC04CIE GNHGC04CKJ']/thead/tr/th[text() = 'Address']"
First Name первого контакта - "//table[@class='GNHGC04CIE GNHGC04CKJ']/tbody/tr[1]/td[2]"
Last Name первого контакта - "//table[@class='GNHGC04CIE GNHGC04CKJ']/tbody/tr[1]/td[3]"
category первого контакта - "//table[@class='GNHGC04CIE GNHGC04CKJ']/tbody/tr[1]/td[4]/div/select"
address первого контакта - "//table[@class='GNHGC04CIE GNHGC04CKJ']/tbody/tr[1]/td[5]"
кнопка First page - "//img[@aria-label='First page']"
кнопка Last page - "//img[@aria-label='Last page']"
кнопка Next page - "//img[@aria-label='Next page']"
кнопка Previuos page - "//img[@aria-label='Previous page']"
подпись -  "//table/tbody/tr/td/div[@class='gwt-HTML']"

2. ChangeCategoryTest
- последовательное изменение категорий у пяти строк таблицы, 
- последовательная проверка, что категории у этих строк совпадают с заданными
3. PageButtonsTest
Проверка работы кнопок перехода на другую страницу
1) Нажатие на кнопку "Первая страница", если она активна. Запоминаем контакты первой страницы
2) Многократное нажатие на кнопку "Следующая страница", до тех пор пока она не стнет неактивна. Чтобы проверка не зацикливалась, установлено максимальное допустимое число страниц - 100 тыс. Запоминаем контакты последней страницы
3) Многократное нажатие на кнопку "Предыдущая страница", до тех пор пока она не станет неактивна. Сравниваем контакты на странице с контактами первой страницы (п.1)
4) Нажимаем на кнопку "Последняя страница". Сравниваем контакты на странице с контактами последней страницы (п.2)
5) Нажимаем на кнопку "Первая страница" (ее функционирование могло не быть проверено в п.1). Сравниваем контакты на странице с контактами первой страницы (п.1)

Таблица контактов не проходит тест - последняя страница имеет разный вид при движении вперед кнопками "следующая страница" и при движении кнопкой "последняя страница"
 
4. TableSubscriptionTest
Проверка подписи под таблицей (с указанием текущих номеров контактов и общего количества)
1) Переход на первую страницу. Проверка, что номер первого контакта на первой странице=1, а номер последнего контакта = количество контактов на странице
2) нажатие на кнопку "следующая страница" до тех пор, пока она не стнет неактивной. После каждого нажатия:
2.1) Проверка, что номер первого контакта на текущей странице =предыдущий последний номер +1,
2.2) Проверка, что последний номер текущей страницы = первый номер текущей страницы +количество контактов на странице
3) Когда кнопка "следующая страница" станет неактивной, проверяется, что общее количество контактов (в подписи под таблицей) равно номеру последнего контакта на последней странице

Таблица контактов не проходит тест - номер первого контакта на последней странице не равен номеру предыдущего посленего контакта + 1


СПОСОБ ЗАПУСКА:
Запуск тестов выполняется с помощью Maven. Нужно перейти в папку с проектом selenium6 (в ней находится pom.xml) и выполнить команду "mvn test".
Необходимо, чтобы на машине, на которой выполнеяется запуск, были установлены:
- java 7 или более поздняя
- apache-maven-3.x.y
- браузер Mozilla Firefox (тесты выполняются в нем)
